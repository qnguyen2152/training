/* ---> This file is automatically generated by ../core/API_Generator.pl! <--- */
#ifndef API_NAVI_H
#define API_NAVI_H
/***************************************************************************
*================ Copyright by Continental Automotive GmbH =================
****************************************************************************
*
* Titel        : Navi_api.hpp
*
* Description  : HMI API EXPORT HEADER
*
* Environment  : JGP 2014

* Author       : Cao Yiran
*
****************************************************************************/

#include "APIM_ApiInterface.h"

#ifdef __cplusplus
extern "C" {
#endif // ifdef __cplusplus

/****************************************************************************
** Header Files (Only those that are needed in this file)
****************************************************************************/

#include "cdef.h"
#include "arborcfg.h"
#include "apim_ce.h"
#ifdef ARBOR_SUBSYS_GS4
#include "rsst_ct.h"
#endif

/***************************************************************************
* API FUNCTION DECLARATIONS
***************************************************************************/
/****************************************************************************************** 
 * Check the Vehicle movement status
 * @response  => ONCHANGE
 * @return    => bool
 * 
 * @param void
 * 
 ******************************************************************************************/
bool Navi_boVehicleMove(void);
/******************************************************************************************
* Get the TP visible status
* @response  => ONCHANGE
* @return    => bool
*
* @param	 u8Index - 0:TBT 1:TBT_Dest 2:AV 3:AV_PhoneNum
*
******************************************************************************************/
bool boGetTPVisible(uint8 u8Index);

/****************************************************************************************** 
 * Get TBT Arrow position
 * @response  => ONCHANGE
 * @return    => uint16
 * 
 * @param	 u8Index - Index for return data
 * 
 ******************************************************************************************/
uint16 Navi_u16GetTbtArrowPosition ( uint8 u8Index );


/****************************************************************************************** 
 * Get TBT loading image angle
 * @response  => NONE
 * @return    => float
 * 
 * @param	 boIsInit - 0 : no init, 1 : init angle
 * 
 ******************************************************************************************/
float32 Navi_f32GetTbtLoadingAngle(bool boIsInit);


/****************************************************************************************** 
 * Get TBT BG Type
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTbtBGType(void);

/******************************************************************************************
* Get the Advance TBT Card Turn List Count
* @response  => ONCHANGE
* @return    => uint8
* @param     void
******************************************************************************************/
uint8 Navi_u8GetTurnListCnt();
/******************************************************************************************
* Get status of a CardInfo by Index
*   Return 0 to hide CardInfo
*   Others: show CardInfo
* @response  => ONCHANGE
* @return    => uint8; 0: skip card info; 1: show card info
* @param     u8CardIndex: Index of CardInfo
******************************************************************************************/
uint8 Navi_u8GetCardInfoStatus(uint8 u8CardIndex);
/****************************************************************************************** 
 * Get TBT region data
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTBTRegion(void);


/****************************************************************************************** 
 * Check the TBT Estimated distance is bigger than 100.
 * @response  => ONCHANGE
 * @return    => bool
 * 
 * @param void
 * 
 ******************************************************************************************/
bool Navi_boCheckTbtEstDistOver100(void);


/****************************************************************************************** 
 * Get the TBT Scale value for Estimated Distance
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTbtEstDistScale(void);


/****************************************************************************************** 
 * Get the TBT Destination Type
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTBTDestType(void);


/****************************************************************************************** 
 * Get the TBT Detailed Destination Name TP
 * @response  => ONCHANGE
 * @return    => uint16*
 * 
 * @param void
 * 
 ******************************************************************************************/
uint16* Navi_pau16GetTBTDestName(void);


/****************************************************************************************** 
 * Get Estimated Time Minute
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetEstTimeMinute(void);


/****************************************************************************************** 
 * Get Estimated Time Hour
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetEstTimeHour(void);


/****************************************************************************************** 
 * Get Estimated Time Unit.1:AM, 2:PM
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetEstTimeUnit(void);


/****************************************************************************************** 
 * Get Estimated Time Format.1:12Hours, 2:24Hours
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetEstTimeFormat(void);


/****************************************************************************************** 
 * Get Estimated Time Type. 1:Arrival, 2:Remaining
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetEstTimeType(void);


/****************************************************************************************** 
 * Get the Bitmap id for Schematic Diagram
 * @response  => ONCHANGE
 * @return    => RSST_tenBitmapID
 * 
 * @param	 u8Region - Area Information for schematics
 * 
 ******************************************************************************************/
RSST_tenBitmapID Navi_enGetSchematicBmpID(uint8 u8Region);



/****************************************************************************************** 
 * Get the TBT display type
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTbtDisplayType(void);


/****************************************************************************************** 
 * Get the TBT Combined SideStreet value
 * @response  => ONCHANGE
 * @return    => bool
 * 
 * @param	 u8CombiStreetIndex - 
 * 
 ******************************************************************************************/
bool Navi_boGetTbtCombiSideStreet(uint8 u8CombiStreetIndex);


/****************************************************************************************** 
 * Get the TBT SideStreet value
 * @response  => ONCHANGE
 * @return    => bool
 * 
 * @param	 u8StreetIndex - 
 * 
 ******************************************************************************************/
bool Navi_boGetTbtSideStreet(uint8 u8StreetIndex);


/****************************************************************************************** 
 * Get TBT SideStreet value itself
 * @response  => ONCHANGE
 * @return    => uint16
 * 
 * @param void
 * 
 ******************************************************************************************/
uint16 Navi_u16GetTbtSideStreet(void);


/****************************************************************************************** 
 * Get the TP status. True: Show, False: OFF
 * @response  => ONCHANGE
 * @return    => bool
 * 
 * @param void
 * 
 ******************************************************************************************/
bool Navi_boIsTbtTPOnOff(void);


/****************************************************************************************** 
 * Get the TBT Direction value
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTbtDirection(void);


/****************************************************************************************** 
 * Check the TBT distance to TurnPoint is bigger than 100.
 * @response  => ONCHANGE
 * @return    => bool
 * 
 * @param void
 * 
 ******************************************************************************************/
bool Navi_boCheckTbtDistToTurnOver100(void);


/****************************************************************************************** 
 * Get the TBT distance to TurnPoint
 * @response  => ONCHANGE
 * @return    => uint16
 * 
 * @param void
 * 
 ******************************************************************************************/
uint16 Navi_u16GetTbtDistToTurnPoint(void);


/****************************************************************************************** 
 * Get the TBT Estimated distance
 * @response  => ONCHANGE
 * @return    => uint16
 * 
 * @param void
 * 
 ******************************************************************************************/
uint16 Navi_u16GetTbtEstDist(void);


/****************************************************************************************** 
 * Get the TBT Bargraph Level value
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTbtBarGraphLevel(void);


/****************************************************************************************** 
 * Get the TBT Scale value for Distance to Turn
 * @response  => ONCHANGE
 * @return    => uint8
 * 
 * @param void
 * 
 ******************************************************************************************/
uint8 Navi_u8GetTbtDistToTurnScale(void);


/****************************************************************************************** 
 * Get the TBT Destination Text
 * @response  => ONCHANGE
 * @return    => uint16*
 * 
 * @param void
 * 
 ******************************************************************************************/
uint16* Navi_pau16GetTBTData(void);

/****************************************************************************************** 
 * Set the Active TBT Mode Index to Dpool
 * @response  => NONE
 * @return    => void
 * 
 * @param	 u16TBTModeIndex - TBT Mode Index
 * 
 ******************************************************************************************/

bool Navi_boGetIsDestSet(void);

/******************************************************************************************
* Get the TBT distance to TurnPoint Visible property
* @response  => ONCHANGE
* @return    => bool
* @param void
******************************************************************************************/
bool Navi_boGetTbtDistToTurnPointVisible(void);

/******************************************************************************************
* Get the TBT Bar graph Visible property
* @response  => ONCHANGE
* @return    => bool
* @param void
******************************************************************************************/
bool Navi_boGetBarGraphVisible(void);

#ifdef __cplusplus
}
#endif // ifdef __cplusplus


#endif /* API_NAVI_H */
/* --- EOF --- */
